{{>layout/header}}      // Include the header section from another file

<h1 class="page-header">데이터베이스 생성 보조 웹사이트</h1>      // Main heading

{{#screenshot}}     // If a screenshot exists
    <a href="{{../tableName}}.html"><img src="{{../screenshot}}"></a>       // Show the screenshot with a link to the table
{{/screenshot}}

<div class="col-md-12">
    <div class="row">
        <div class="col-md-12">
            <div class="row">
                <div class="col-md-12">
                    <table class="table table-striped">    // Show a table with striped rows
                        <thead>
                        <tr>
                            {{#posts}}    // For each post
                                <th>{{this.title}}</th>    // Show the post title in a table header cell
                            {{/posts}}
                        </tr>
                        </thead>
                        <tbody>
                        <tr>
                            {{#posts}}    // For each post
                                <td>{{this}}</td>    // Show the post content in a table data cell
                            {{/posts}}
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="button-container">    // Show two buttons for uploading and downloading
                <a href="#" onclick="selectFile()" role="button" class="btn btn-primary btn-create">
                    업로드
                </a>
                <a href="/download" role="button" class="btn btn-primary btn-download">
                    다운로드
                </a>
            </div>
        </div>
    </div>
</div>

<style>    // Define CSS styles for the page
  .container {
    margin-top: 50px;
  }
  table {
    text-align: center;
    padding-right: 30px;
  }
  th {
    background-color: #007bff;
    color: white;
  }
  td {
    vertical-align: middle !important;
    padding-right: 20px;
  }
  .button-container {
      position: fixed;
      bottom: 20px;
      right: 20px;
      display: flex;
      justify-content: flex-end; /* align buttons to the right */
      align-items: center; /* center buttons vertically */
      width: auto; /* remove fixed width */
      overflow: hidden;
  }
      .btn-create, .btn-download {
      margin-left: 10px; /* add some margin between the buttons */
      white-space: nowrap;
  }
  .page-header {
    margin-bottom: 20px;
  }
  h1 {
    text-align: center;
    margin-top: 50px;
    margin-bottom: 50px;
  }
</style>

<script>    // Define JavaScript functions for handling file uploads and input updates
function selectFile() {    // Handle file selection
  // Create an input element for file selection
  var input = document.createElement("input");
  input.type = "file";
  input.accept = ".html"; // Only allow HTML files to be uploaded

  // Add a change listener to the input element to handle file selection
  input.addEventListener("change", function(event) {
    // Get the selected file
    var file = event.target.files[0];

    // Create a FormData object to store the file data
    var formData = new FormData();
    formData.append("file", file);

    // Send an AJAX request to the server to upload the file and update the view
    var xhr = new XMLHttpRequest();
    xhr.open("POST", "/upload");
    xhr.onload = function() {
      if (xhr.status === 200) {
        var response = JSON.parse(xhr.responseText);

        // Update the screenshot and table on the view
        document.getElementById("screenshot").src = response.screenshot;
        document.getElementById("table").innerHTML = response.tableHtml;
      } else {
        console.log("Error: " + xhr.statusText);
      }
    };
    xhr.send(formData);
  });

  // Trigger a click event on the input element to open the file selection dialog
  input.click();
}

function handleInputChange(tableName, inputName, inputValue) {
  // Send an AJAX request to update the database with the new input value
  var xhr = new XMLHttpRequest();
  xhr.open("POST", "/update");
  xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
  xhr.onload = function() {
    if (xhr.status === 200) {
      console.log("Input updated successfully!");
    } else {
      console.log("Error: " + xhr.statusText);
    }
  };
  xhr.send("tableName=" + tableName + "&inputName=" + inputName + "&inputValue=" + inputValue);
}
</script>